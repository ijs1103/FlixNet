{"version":3,"sources":["assets/imdb.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/UseTabs.js","Components/MovieDetail.js","Components/TvDetail.js","Routes/Detail.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/noPosterSmall.png"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","UseTabs","initTab","allTabs","Array","isArray","_useState","useState","_useState2","Object","slicedToArray","currentIndex","setCurrentIndex","currentItem","changeItem","console","log","MovieDetail_templateObject","Backdrop","MovieDetail_templateObject2","bgImage","Contents","MovieDetail_templateObject3","Cover","MovieDetail_templateObject4","Data","MovieDetail_templateObject5","MovieDetail_templateObject6","TabButton","_templateObject7","TabMenu","_templateObject8","ItemContainer","_templateObject9","_templateObject10","Imdb","img","_templateObject11","Divider","_templateObject12","Overview","_templateObject13","Cnames","_templateObject14","Videos","_templateObject15","Video","iframe","_templateObject16","_templateObject17","_templateObject18","Stitle","_templateObject19","Casts","_templateObject20","Cast","_templateObject21","MovieDetail","_UseTabs","MovieDetail_Container","content","backdrop_path","MovieDetail_Title","href","imdb_id","rel","source","section","index","tab","onClick","MovieDetail_Item","runtime","genres","genre","name","overview","videos","react_carousel_default","plugins","video","width","height","src","frameborder","allow","allowfullscreen","production_companies","company","production_countries","country","casts","cast","MovieDetail_ImageContainer","MovieDetail_Image","profile_path","TvDetail_templateObject","TvDetail_templateObject2","TvDetail_templateObject3","TvDetail_templateObject4","TvDetail_templateObject5","h3","TvDetail_templateObject6","TvDetail_templateObject7","TvDetail_templateObject8","TvDetail_templateObject9","TvDetail_templateObject10","TvDetail_templateObject11","TvDetail_templateObject12","Scontainer","TvDetail_templateObject13","TvDetail_templateObject14","TvDetail_templateObject15","TvDetail_templateObject16","TvDetail_templateObject17","TvDetail_templateObject18","TvDetail_templateObject19","TvDetail_templateObject20","TvDetail_templateObject21","_templateObject22","TvDetail","TvDetail_Container","TvDetail_Backdrop","TvDetail_Contents","TvDetail_Cover","TvDetail_Data","TvDetail_Title","TvDetail_TabMenu","TvDetail_TabButton","TvDetail_ItemContainer","TvDetail_Item","TvDetail_Divider","episode_run_time","TvDetail_Overview","TvDetail_Cnames","TvDetail_Casts","TvDetail_Cast","TvDetail_ImageContainer","TvDetail_Image","TvDetail_Stitle","TvDetail_Videos","TvDetail_Video","seasons","season","TvDetail_Year","air_date","Detail","setData","_useState3","_useState4","setError","_useState5","_useState6","setLoading","useLocation","includes","history","useHistory","useParams","_getDetail","asyncToGenerator","mark","parsedId","contents","result","_result","parseInt","isNaN","abrupt","push","credits","apply","arguments","useEffect","getDetail","Components_MovieDetail","Components_TvDetail","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5dd34390.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imdb.f67f7205.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        \n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date ? movie.release_date.substring(0, 4) : \"none\"}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos,credits\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos,credits\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.5);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item> \n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year= { movie.release_date ? movie.release_date.substring(0, 4) : \"none\"}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={ show.first_air_date ? show.first_air_date.substring(0, 4) : \"none\"}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n  // 빈칸 방지\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import { useState } from \"react\";\n\nconst UseTabs = (initTab, allTabs) => {\n    if (!allTabs || !Array.isArray(allTabs)) {\n        console.log(\"what the ...\");\n        return;\n    }\n\n    const [currentIndex, setCurrentIndex] = useState(initTab);\n\n    return {\n        currentItem: allTabs[currentIndex],\n        changeItem: setCurrentIndex\n    };\n};\n\nexport default UseTabs;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport UseTabs  from \"../Components/UseTabs\";\nimport styled from \"styled-components\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n    font-size: 1rem;\n  `;\n\n  const Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n  `;\n\n  const Contents = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n    \n  `;\n\n  const Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n  `;\n\n  const Data = styled.div`\n    width: 70%;\n    margin-left: 1rem;\n    overflow-y: scroll;\n  `;\n\nconst Title = styled.p`\n  font-size: 2.5rem;\n`;\nconst TabButton = styled.div`\n    width: 33%;\n    color: ${props => (props.current ? \"white\" : \"darkgrey\")};\n    font-size: 1.5rem;\n    text-align: center;\n    text-transform: capitalize;\n    padding: 1rem;\n    border-bottom: ${props => (props.current ? \"yellow\" : \"transparent\")} solid 2px;\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst TabMenu = styled.div`\n    display: flex;\n    margin: 0.5rem 0px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 1rem 0;\n  height: 70%;\n`;\n\nconst Item = styled.span``;\n\nconst Imdb = styled.img`\n  margin-left: 1.5rem;\n  width: 3rem;\n`;\n\nconst Divider = styled.span`\n  margin: 0 20px;\n`;\n\nconst Overview = styled.p`\n  margin-top: 20px;\n  opacity: 0.7;\n  line-height: 1.5;\n`;\n\nconst Cnames = styled.p`\n  font-size: 1.5rem;\n  margin-top: 1rem;\n  opacity: 0.7;\n`;\n\nconst Videos = styled.div`\n  height: 100%;\n`;\nconst Video = styled.iframe`\n`;\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  width: 125px;\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n`;\n\nconst Stitle = styled.span`\n  display: block;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Casts = styled.div`\n  margin-top: 2rem;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  ::-webkit-scrollbar {\n    height: 4px;\n  }\n  ::-webkit-scrollbar-track {\n  background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background-color: yellow;\n  opacity: 0.7;\n  }\n  ::-webkit-scrollbar-button {\n  width: 0;\n  height: 0;\n  }\n`;\n\nconst Cast = styled.div`\n  margin-right: 1.5rem;\n`;\n\nconst MovieDetail = ({data}) => {\n  \n    const { currentItem, changeItem } = UseTabs(0, data);\n    return (\n    <Container>\n      <Helmet>\n        <title>\n          {data[0].content.original_title}{\" \"} | FlixNet\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${data[0].content.backdrop_path}`}\n      />\n      <Contents>\n        <Cover\n          bgImage={\n            data[0].content.poster_path\n              ? `https://image.tmdb.org/t/p/original${data[0].content.poster_path}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{data[0].content.original_title}<a href={`https://www.imdb.com/title/${data[0].content.imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\"><Imdb source={require(\"../assets/imdb.png\")} /></a></Title>\n\n          <TabMenu>\n            {data.map(\n                  (section, index) => (\n                    <TabButton current={currentItem.tab===section.tab} onClick={() => changeItem(index)}>{section.tab}</TabButton>\n            ))}\n          </TabMenu>\n            {currentItem.tab === \"info\" ? \n              <ItemContainer>\n                  <Item>\n                    {currentItem.content.release_date && currentItem.content.release_date.substring(0, 4)}\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {currentItem.content.runtime} min\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {currentItem.content.genres &&\n                      currentItem.content.genres.map((genre, index) =>\n                        index === currentItem.content.genres.length - 1\n                          ? genre.name\n                          : `${genre.name} / `\n                      )}\n                  </Item>\n                  <Divider></Divider>\n                  <Overview>{currentItem.content.overview}</Overview>\n                </ItemContainer> : (currentItem.tab === \"trailer\") ? \n                <ItemContainer>\n                  <Videos>\n                    {currentItem.content.videos && \n                    <Carousel plugins={['arrows']}>\n                      {currentItem.content.videos.map(\n                        (video, index) => (\n                          <Video key={video.key} title={index} width=\"90%\" height=\"400px\" src={`https://www.youtube.com/embed/${video.key}?mute=1`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></Video>\n                        )\n                      )}\n                    </Carousel>\n                    }\n                  </Videos>\n                </ItemContainer> : \n                <ItemContainer>\n                    <Cnames>\n                      {currentItem.content.production_companies.length > 0 ? currentItem.content.production_companies.map(\n                        (company, index) => company &&\n                            (index === currentItem.content.production_companies.length - 1\n                              ? company.name\n                              : `${company.name} / `)\n                      ) : \"No Companies\"}\n                    </Cnames>\n                    <Cnames>\n                      {currentItem.content.production_countries.length > 0 ? currentItem.content.production_countries.map(\n                        (country, index) => country &&\n                            (index === currentItem.content.production_countries.length - 1\n                              ? country.name\n                              : `${country.name} / `)\n                      ) : \"No Countries\"}\n                    </Cnames>\n                    <Casts>\n                    {currentItem.content.casts.map(\n                      (cast, index) => (\n                        <Cast>\n                          <ImageContainer>\n                          <Image\n                          bgUrl={\n                              cast.profile_path\n                              ? `https://image.tmdb.org/t/p/original${cast.profile_path}`\n                              : require(\"../assets/noPosterSmall.png\")\n                          }\n                          />\n                          </ImageContainer>\n                          <Stitle>\n                              {cast.name}\n                          </Stitle>\n                        </Cast>\n                      )\n                    )}\n                    </Casts>\n                </ItemContainer>\n            }\n        </Data>\n      </Contents>\n    </Container>\n    );\n};\n\nMovieDetail.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        backdrop_path: PropTypes.string,\n        poster_path: PropTypes.string,\n        original_title: PropTypes.string,\n        release_date: PropTypes.string,\n        runtime: PropTypes.number,\n        genres: PropTypes.array,\n        imdb_id: PropTypes.string,\n        overview: PropTypes.string,\n      })\n    }),\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        production_companies: PropTypes.array,\n        production_countries: PropTypes.array,\n        casts: PropTypes.array\n      })\n    }),\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        videos: PropTypes.array\n      })\n    }),\n  ),\n};\n\nexport default MovieDetail;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport UseTabs  from \"../Components/UseTabs\";\nimport styled from \"styled-components\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\n\n  const Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n    font-size: 1rem;\n  `;\n\n  const Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n  `;\n\n  const Contents = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n\n  `;\n\n  const Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n  `;\n\n  const Data = styled.div`\n    width: 70%;\n    margin-left: 1rem;\n    overflow-y: scroll;\n\n  `;\n\nconst Title = styled.h3`\n  font-size: 2.5rem;\n`;\nconst TabButton = styled.div`\n    width: 25%;\n    color: ${props => (props.current ? \"white\" : \"darkgrey\")};\n    font-size: 1.5rem;\n    text-align: center;\n    text-transform: capitalize;\n    padding: 1rem;\n    border-bottom: ${props => (props.current ? \"yellow\" : \"transparent\")} solid 2px;\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst TabMenu = styled.div`\n    display: flex;\n    margin: 0.5rem 0px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 1rem 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  margin-top: 20px;\n  opacity: 0.7;\n  line-height: 1.5;\n`;\n\nconst Scontainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  width: 125px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n`;\n\nconst Stitle = styled.span`\n  display: block;\n`;\n\nconst Year = styled.span`\n  font-size: 0.5rem;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Cnames = styled.p`\n  font-size: 1.5rem;\n  margin-top: 1rem;\n  opacity: 0.7;\n`;\n\nconst Videos = styled.div`\n  height: 100%;\n`;\nconst Video = styled.iframe`\n`;\n\nconst Casts = styled.div`\n  margin-top: 2rem;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  ::-webkit-scrollbar {\n  height: 4px;\n  }\n  ::-webkit-scrollbar-track {\n  background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background-color: yellow;\n  }\n`;\n\nconst Cast = styled.div`\n  margin-right: 1.5rem;\n`;\n\nconst TvDetail = ({data}) => {\n    const { currentItem, changeItem } = UseTabs(0, data);\n   \n    return (\n    <Container>\n      <Helmet>\n        <title>\n          {data[0].content.original_name}{\" \"} | FlixNet\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${data[0].content.backdrop_path}`}\n      />\n      <Contents>\n        <Cover\n          bgImage={\n            data[0].content.poster_path\n              ? `https://image.tmdb.org/t/p/original${data[0].content.poster_path}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{data[0].content.original_name}</Title>\n          \n          <TabMenu>\n            {data.map(\n                    (section, index) => (\n                    <TabButton key={index} current={currentItem.tab===section.tab} onClick={() => changeItem(index)}>{section.tab}</TabButton>\n            ))}\n          </TabMenu>\n            {currentItem.tab === \"info\" ? \n              <ItemContainer>\n                <Item>\n                  {currentItem.content.first_air_date && currentItem.content.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {currentItem.content.episode_run_time && currentItem.content.episode_run_time[0]} min\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {currentItem.content.genres &&\n                    currentItem.content.genres.map((genre, index) =>\n                      index === currentItem.content.genres.length - 1\n                        ? genre.name\n                        : `${genre.name} / `\n                    )}\n                </Item>\n                <Divider></Divider>\n                <Overview>{currentItem.content.overview}</Overview>\n                </ItemContainer> : \n                ((currentItem.tab === \"production\") ? <ItemContainer>\n                    <Cnames>\n                      {currentItem.content.production_companies.length > 0 ? currentItem.content.production_companies.map(\n                        (company, index) => company &&\n                            (index === currentItem.content.production_companies.length - 1\n                              ? company.name\n                              : `${company.name} / `)\n                      ) : \"No Companies\"}\n                    </Cnames>\n                    <Cnames>\n                      {currentItem.content.production_countries.length > 0 ? currentItem.content.production_countries.map(\n                        (country, index) => country &&\n                            (index === currentItem.content.production_countries.length - 1\n                              ? country.name\n                              : `${country.name} / `)\n                      ) : \"No Countries\"}\n                    </Cnames>\n                    <Casts>\n                    {currentItem.content.casts.map(\n                      (cast, index) => (\n                        <Cast>\n                          <ImageContainer>\n                          <Image\n                          bgUrl={\n                              cast.profile_path\n                              ? `https://image.tmdb.org/t/p/original${cast.profile_path}`\n                              : require(\"../assets/noPosterSmall.png\")\n                          }\n                          />\n                          </ImageContainer>\n                          <Stitle>\n                              {cast.name}\n                          </Stitle>\n                        </Cast>\n                      )\n                    )}\n                    </Casts>\n                </ItemContainer> : (currentItem.tab === \"trailer\") ? \n                <ItemContainer>\n                  <Videos>\n                  {currentItem.content.videos && \n                    <Carousel plugins={['arrows']}>\n                      {currentItem.content.videos.map(\n                        (video, index) => (\n                          <Video key={video.key} title={index} width=\"90%\" height=\"400px\" src={`https://www.youtube.com/embed/${video.key}?mute=1`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></Video>\n                        )\n                      )}\n                    </Carousel>\n                  }\n                  </Videos>\n                </ItemContainer> :\n                <ItemContainer>\n                    <Scontainer>\n                        {currentItem.content.seasons.map(\n                            (season, index) => (\n                                <div>\n                                    <ImageContainer>\n                                    <Image\n                                    bgUrl={\n                                        season.poster_path\n                                        ? `https://image.tmdb.org/t/p/original${season.poster_path}`\n                                        : require(\"../assets/noPosterSmall.png\")\n                                    }\n                                    />\n                                    </ImageContainer>\n                                    <Stitle>\n                                        {season.name}\n                                    </Stitle>\n                                    <Year>{season.air_date}</Year>\n                                </div>\n                            )\n                        )}\n                    </Scontainer>\n                </ItemContainer>)\n            }\n        </Data>\n      </Contents>\n    </Container>\n    );\n};\n\nTvDetail.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        backdrop_path: PropTypes.string,\n        poster_path: PropTypes.string,\n        original_name: PropTypes.string,\n        episode_run_time: PropTypes.array,\n        first_air_date: PropTypes.string,\n        genres: PropTypes.array,\n        overview: PropTypes.string,\n      })\n    }),\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        production_companies: PropTypes.array,\n        production_countries: PropTypes.array,\n        casts: PropTypes.array\n      })\n    }),\n    PropTypes.shape({\n      tab: PropTypes.string,\n      content: PropTypes.shape({\n        videos: PropTypes.array\n      })\n    }),\n    PropTypes.shape({\n        tab: PropTypes.string,\n        content: PropTypes.shape({\n            seasons: PropTypes.array,\n        })\n    }),\n  ),\n};\n\nexport default TvDetail;","import React, {useState, useEffect} from \"react\";\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport MovieDetail from \"Components/MovieDetail\";\nimport TvDetail from \"Components/TvDetail\";\nimport { moviesApi, tvApi } from \"../api\";\n\nexport default function Detail() {\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let isMovie = useLocation().pathname.includes(\"/movie/\");\n  let history = useHistory();\n  let params = useParams();\n\n  async function getDetail() {\n    \n    const parsedId = parseInt(params.id);\n\n    if (isNaN(parsedId)) {\n      return history.push(\"/\");\n    }\n    let contents = [];\n    try {\n      if (isMovie) {\n        const { data: result } = await moviesApi.movieDetail(parsedId);\n        console.log(result);\n        contents = [\n          {   \n              tab: \"info\",\n              content: {\n                backdrop_path: result.backdrop_path,\n                poster_path: result.poster_path,\n                original_title: result.original_title,\n                release_date: result.release_date,\n                runtime: result.runtime,\n                genres: result.genres,\n                imdb_id: result.imdb_id,\n                overview: result.overview,\n                \n              }         \n          },\n          {\n            tab: \"production\",\n            content: {\n              production_companies: result.production_companies,\n              production_countries: result.production_countries,\n              casts: result.credits.cast,\n            }\n          },\n          {\n            tab: \"trailer\",\n            content: {\n              videos: result.videos.results\n            }\n          }\n        ];\n        setData(contents);\n      } else {\n        const { data: result } = await tvApi.showDetail(parsedId);\n        contents = [\n          { \n            tab: \"info\",\n            content: {\n              backdrop_path: result.backdrop_path,\n              poster_path: result.poster_path,\n              original_name: result.original_name,\n              first_air_date: result.first_air_date,\n              episode_run_time: result.episode_run_time,\n              genres: result.genres,\n              overview: result.overview,\n              videos: result.videos.results\n            }   \n          },\n          {\n            tab: \"production\",\n            content: {\n              production_companies: result.production_companies,\n              production_countries: result.production_countries,\n              casts: result.credits.cast,\n            }\n          },\n          {\n            tab: \"trailer\",\n            content: {\n              videos: result.videos.results\n            }\n          },\n          {\n            tab: \"seasons\",\n            content: {\n              seasons: result.seasons\n            }\n          }\n        ];\n        setData(contents);\n      }\n    } catch {\n      console.log(\"error\");\n      setError(\"Can't find anything.\");\n    } finally {\n      setLoading(false);\n      \n    }\n  }\n\n  useEffect(\n    ()=>{\n      getDetail();\n    }, []\n  );\n  \n  return (loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (isMovie ? <MovieDetail data={data} /> : <TvDetail data={data} />));\n}","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n    \n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";"],"sourceRoot":""}